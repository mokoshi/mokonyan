name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: mokonyan
  LIGHTSAIL_SERVICE: mokonyan-dev
  CONTAINER_NAME: mokonyan
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine image URI
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image
        env:
          ECR_URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
        run: |
          docker buildx build --platform linux/amd64 -t ${ECR_URI}:${IMAGE_TAG} --push .

      - name: Fetch current Lightsail deployment
        run: |
          aws lightsail get-container-services \
            --service-name $LIGHTSAIL_SERVICE \
            --query "containerServices[0].currentDeployment" \
            --output json > deployment.json

      - name: Patch image URI in deployment.json
        env:
          ECR_URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
        run: |
          NEW_IMAGE="${ECR_URI}:${IMAGE_TAG}"
          jq \
            --arg img "$NEW_IMAGE" \
            --arg cn "$CONTAINER_NAME" \
            '.containers[$cn].image = $img' \
            deployment.json > new-deployment.json

      - name: Deploy new container version
        run: |
          aws lightsail create-container-service-deployment \
            --service-name $LIGHTSAIL_SERVICE \
            --containers $(jq -c '.containers' new-deployment.json) \
            --public-endpoint $(jq -c '.publicEndpoint' new-deployment.json)

      - name: Wait for deployment to complete
        run: |
          while true; do
            STATUS=$(aws lightsail get-container-services \
              --service-name $LIGHTSAIL_SERVICE \
              --query "containerServices[0].state" \
              --output text)
            if [ "$STATUS" = "RUNNING" ]; then
              echo "Deployment completed successfully"
              break
            elif [ "$STATUS" = "FAILED" ]; then
              echo "Deployment failed"
              exit 1
            fi
            echo "Waiting for deployment to complete... Current status: $STATUS"
            sleep 10
          done
